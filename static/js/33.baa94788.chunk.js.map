{"version":3,"file":"static/js/33.baa94788.chunk.js","mappings":"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","sources":["components/Api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a7dde24bc80070e7cc27b7a3c039ad7e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies(endPoint) {\n  const url = BASE_URL + endPoint + `&api_key=${API_KEY}`;\n  const response = await axios.get(url);\n\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const options = {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${movieId}`,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhN2RkZTI0YmM4MDA3MGU3Y2MyN2I3YTNjMDM5YWQ3ZSIsInN1YiI6IjY1NGE3MjhkZmQ0ZjgwMDEwMWI3OTU0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HLs_coIGniZz3rHJhpnbRhPNnr1FLCXJ7grh_79FRuI',\n    },\n  };\n  const response = await axios.request(options);\n\n  return response.data;\n}\n","import { styled } from 'styled-components';\n\nexport const MovieDetailsWrapper = styled.div`\n  padding-top: 12px;\n  display: flex;\n  gap: 24px;\n\n  & img {\n    border-radius: 5px;\n  }\n\n  & span {\n    margin-right: 24px;\n    margin-top: 24px;\n    display: inline-block;\n  }\n`;\n\nexport const LinksWrapper = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n","import { fetchMovieById } from 'components/Api';\nimport Loader from 'components/Loader/Loader';\nimport React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { StyledLink, StyledWrapper } from 'pages/HomePage/HomePage.styled';\nimport { LinksWrapper, MovieDetailsWrapper } from './MovieDetails.styled';\n\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nconst Cast = lazy(() => import('components/Cast/Cast'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieById(movieId);\n        setMovieDetails(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostDetails();\n  }, [movieId]);\n\n  return (\n    <StyledWrapper>\n      <StyledLink to={backLinkRef.current}>Go back</StyledLink>\n      {error !== null && <p className=\"error\">{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <MovieDetailsWrapper>\n          {movieDetails.poster_path !== null && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n              width=\"300\"\n              height=\"450\"\n            />\n          )}\n          {movieDetails.poster_path === null && (\n            <img\n              src=\"https://static.vecteezy.com/system/resources/previews/005/337/799/large_2x/icon-image-not-found-free-vector.jpg\"\n              alt={movieDetails.title}\n              width=\"300\"\n              height=\"450\"\n            />\n          )}\n          <div className=\"movieInfo\">\n            <h2>\n              {movieDetails.title ||\n                movieDetails.name ||\n                movieDetails.original_name}{' '}\n              ( {movieDetails.release_date.slice(0, 4)} )\n            </h2>\n            <p>User score: {Math.ceil(movieDetails.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            {movieDetails.genres.map(({ id, name }) => (\n              <span key={id}>{name}</span>\n            ))}\n          </div>\n        </MovieDetailsWrapper>\n      )}\n      <h4>Additional information</h4>\n      <LinksWrapper>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n      </LinksWrapper>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"reviews\" element={<Reviews />} />\n          <Route path=\"cast\" element={<Cast />} />\n        </Routes>\n      </Suspense>\n    </StyledWrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","fetchMovies","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","concat","axios","sent","abrupt","data","stop","fetchMovieById","_x2","_fetchMovieById","_callee2","movieId","options","_context2","method","headers","accept","Authorization","MovieDetailsWrapper","styled","_templateObject","_taggedTemplateLiteral","LinksWrapper","_templateObject2","Reviews","lazy","Cast","_location$state$from","_location$state","useParams","location","useLocation","backLinkRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchPostDetails","_ref","result","t0","message","finish","_jsxs","StyledWrapper","children","_jsx","StyledLink","to","current","className","Loader","poster_path","src","alt","title","width","height","name","original_name","release_date","slice","Math","ceil","vote_average","overview","genres","map","_ref2","id","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}