{"version":3,"file":"static/js/387.b8431170.chunk.js","mappings":"kRAEaA,E,QAAaC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+c,SCiDnC,EA5Ca,WACX,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEF,OAFEF,EAAAC,KAAA,EAErBf,GAAa,GAAMc,EAAAE,KAAA,GACEC,EAAAA,EAAAA,GAAeZ,EAAU,YAAY,KAAD,EAAnDQ,EAAMC,EAAAI,KACZtB,EAAQiB,GAAQC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBV,EAASU,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBf,GAAa,GAAOc,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBAVqB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAYtBhB,GACF,GAAG,CAACH,KAGFoB,EAAAA,EAAAA,MAACtC,EAAU,CAAAuC,SAAA,CACE,OAAVvB,IAAkBwB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,QAAOF,SAAEvB,IACxCJ,IAAa4B,EAAAA,EAAAA,KAACE,EAAAA,EAAM,IACX,OAATlC,GACCA,EAAKA,KAAKmC,KAAI,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAASF,EAATE,UAAWC,EAAIH,EAAJG,KAAI,OAC5CT,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAAC,OAAoCJ,GACvCK,IAAKH,EACLI,MAAM,MACNC,OAAO,SAETZ,EAAAA,EAAAA,KAAA,MAAAD,SAAKQ,KACLT,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYO,OARRC,EASJ,MAIf,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledCast = styled.ul`\n  display: flex;\n  gap: 24px;\n  overflow: scroll;\n  padding-left: 0;\n  margin-bottom: 24px;\n\n  & li {\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    min-width: 250px;\n    border-radius: 5px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n\n  & img {\n    width: 100%;\n    border-radius: 5px;\n    margin-bottom: 10px;\n  }\n`;\n","import { fetchMovieById } from 'components/Api';\nimport Loader from 'components/Loader/Loader';\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledCast } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieById(movieId + '/credits');\n        setCast(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostDetails();\n  }, [movieId]);\n\n  return (\n    <StyledCast>\n      {error !== null && <p className=\"error\">{error}</p>}\n      {isLoading && <Loader />}\n      {cast !== null &&\n        cast.cast.map(({ profile_path, character, name }) => (\n          <li key={name}>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${profile_path}`}\n              alt={name}\n              width=\"200\"\n              height=\"300\"\n            />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </StyledCast>\n  );\n};\n\nexport default Cast;\n"],"names":["StyledCast","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchPostDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","fetchMovieById","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","className","Loader","map","_ref2","profile_path","character","name","src","concat","alt","width","height"],"sourceRoot":""}